<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="69967" started-at="2020-11-27T23:54:16 IST" finished-at="2020-11-27T23:55:26 IST">
    <groups>
    </groups>
    <test name="Validating user log" duration-ms="44495" started-at="2020-11-27T23:54:16 IST" finished-at="2020-11-27T23:55:01 IST">
      <class name="Academy.HomePage">
        <test-method status="PASS" signature="initialize()[pri:0, instance:Academy.HomePage@10e41621]" name="initialize" is-config="true" duration-ms="10321" started-at="2020-11-27T23:54:16 IST" finished-at="2020-11-27T23:54:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="basePageNavigation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Academy.HomePage@10e41621]" name="basePageNavigation" duration-ms="19916" started-at="2020-11-27T23:54:27 IST" data-provider="getData" finished-at="2020-11-27T23:54:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[nonrestrciteduser@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123444]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Restricted User]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method status="PASS" signature="basePageNavigation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Academy.HomePage@10e41621]" name="basePageNavigation" duration-ms="13751" started-at="2020-11-27T23:54:47 IST" data-provider="getData" finished-at="2020-11-27T23:55:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[restrciteduser@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[98766]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Non Restricted User]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Academy.HomePage@10e41621]" name="teardown" is-config="true" duration-ms="397" started-at="2020-11-27T23:55:00 IST" finished-at="2020-11-27T23:55:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Academy.HomePage -->
    </test> <!-- Validating user log -->
    <test name="Validate Navigation bar" duration-ms="11539" started-at="2020-11-27T23:55:02 IST" finished-at="2020-11-27T23:55:13 IST">
      <class name="Academy.validateNavigationBar">
        <test-method status="PASS" signature="initialize()[pri:0, instance:Academy.validateNavigationBar@72f926e6]" name="initialize" is-config="true" duration-ms="10928" started-at="2020-11-27T23:55:02 IST" finished-at="2020-11-27T23:55:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="basePageNavigation()[pri:0, instance:Academy.validateNavigationBar@72f926e6]" name="basePageNavigation" duration-ms="287" started-at="2020-11-27T23:55:13 IST" finished-at="2020-11-27T23:55:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Academy.validateNavigationBar@72f926e6]" name="teardown" is-config="true" duration-ms="314" started-at="2020-11-27T23:55:13 IST" finished-at="2020-11-27T23:55:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Academy.validateNavigationBar -->
    </test> <!-- Validate Navigation bar -->
    <test name="Validate title" duration-ms="12749" started-at="2020-11-27T23:55:14 IST" finished-at="2020-11-27T23:55:26 IST">
      <class name="Academy.validateTitle">
        <test-method status="PASS" signature="initialize()[pri:0, instance:Academy.validateTitle@28eaa59a]" name="initialize" is-config="true" duration-ms="11557" started-at="2020-11-27T23:55:14 IST" finished-at="2020-11-27T23:55:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="basePageNavigation()[pri:0, instance:Academy.validateTitle@28eaa59a]" name="basePageNavigation" duration-ms="104" started-at="2020-11-27T23:55:25 IST" finished-at="2020-11-27T23:55:25 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [FEATURED COURSES123] but found [FEATURED COURSES]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [FEATURED COURSES123] but found [FEATURED COURSES]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at Academy.validateTitle.basePageNavigation(validateTitle.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Academy.validateTitle@28eaa59a]" name="teardown" is-config="true" duration-ms="337" started-at="2020-11-27T23:55:26 IST" finished-at="2020-11-27T23:55:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Academy.validateTitle -->
    </test> <!-- Validate title -->
  </suite> <!-- Suite -->
</testng-results>
